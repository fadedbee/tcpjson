#!/usr/bin/expect

# N.B. The outer set of curly brackets are quotes in TCL/expect.
# The JSON received by the server only has a *single* set of outer curly 
# brackets.
# The \n is sent on a separate line as the curly quote sends a literal \n, 
# rather than a 0x10.  (Double quotes *do* send a 0x10 for \n, but then I 
# would have to escape every double quote inside the JSON.)
# Asked question: https://stackoverflow.com/q/47607455/129805

set timeout 30
spawn nc localhost 2222
send {{"method":"GET", "path":["ping"]}}
send "\n"
expect {{"code": 204}}
expect "\n"
send {{"method":"GET", "path":["ping"]}}
send "\n"
expect {{"code": 204}}
expect "\n"
send {{"method":"GET", "path":["stock", "1234"]}}
send "\n"
expect {{"code": 200, "body":{"pcode": "1234", "description", "TEST DATA2"}}}
expect "\n"

